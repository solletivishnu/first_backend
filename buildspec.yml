version: 0.2

cache:
  paths:
    - '/root/.cache/pip/**/*'
    - '/root/.docker/**/*'

env:
  parameter-store:
    DOCKER_HUB_USERNAME: /tara_backend/docker-credentials/username
    DOCKER_HUB_PASSWORD: /tara_backend/docker-credentials/password
    DOCKER_IMAGE_NAME: /tara_backend/docker/image_name
    REDIS_IMAGE: /tara_backend/docker/redis_image

phases:
  install:
    runtime-versions:
      python: 3.x
    commands:
      - echo "[Install] Installing Docker and utilities..."
      - apt-get update && apt-get install -y docker.io jq awscli

  pre_build:
    commands:
      - echo "[PreBuild] Logging in to Docker Hub..."
      - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
      - export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export DOCKER_IMAGE=$DOCKER_IMAGE_NAME
      - export REDIS_IMAGE=$REDIS_IMAGE
      - echo "DOCKER_IMAGE=$DOCKER_IMAGE"
      - echo "IMAGE_TAG=$IMAGE_TAG"
      - echo "REDIS_IMAGE=$REDIS_IMAGE"
      - echo "[PreBuild] Pulling cache image (latest) if available..."
      - export DOCKER_BUILDKIT=1
      - docker pull $DOCKER_IMAGE:latest || echo "Cache image not found, building from scratch"

  build:
    commands:
      - echo "[Build] Building Docker image with caching..."
      - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from=$DOCKER_IMAGE:latest -t $DOCKER_IMAGE:$IMAGE_TAG -t $DOCKER_IMAGE:latest .
      - echo "[Build] Pushing images..."
      - docker push $DOCKER_IMAGE:$IMAGE_TAG
      - docker push $DOCKER_IMAGE:latest

  post_build:
    commands:
      - echo "[PostBuild] Generating image_vars.env..."
      - echo "DOCKER_IMAGE=$DOCKER_IMAGE" > image_vars.env
      - echo "IMAGE_TAG=$IMAGE_TAG" >> image_vars.env
      - echo "REDIS_IMAGE=$REDIS_IMAGE" >> image_vars.env
      - chmod 644 image_vars.env

artifacts:
  files:
    - image_vars.env
    - appspec.yml
    - scripts/*
    - nginx/*
    - docker-compose.yml
